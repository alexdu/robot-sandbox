.PROGRAM rez2005()
    ; Rezolvarea problemei de la examenul din 2005
    ;
    ; Rulare pe simulator:
    ; 1) Copiati acest fisier in folderul robot-programs
    ; 2) Executati comenzile:
    ;    . env ex2005
    ;    . load rez2005
    ;    . exec rez2005
    ;
    ; Rularea in modul 'trace':
    ;    . en trace
    ;    . exec rez2005
    ;    . dis trace
    
    ; Punctele din enunt pot fi folosite daca le declaram
    ; ca variabile globale
    ;
    ; In consola, puteti afisa lista variabilelor globale cu:
    ; . listl           - pentru locatii robot
    ; . listr           - pentru variabile reale
    ; . lists           - pentru string-uri
    GLOBAL p1,p2,pal1,pal2,#safe
    
    ; La fel, distantele din problema sunt deja definite si le declaram globale
    GLOBAL d1,d2,d,h
    
    ; Variabile locale
    AUTO pick,place            ; Punctele robot locale 'pick' si 'place'
    AUTO a,b                   ; Numarul de piese A si B
    AUTO nl,nc,nn              ; numarul de linii/coloane/nivele
    AUTO in.s1, in.s2, in.oprire, out.banda, out.o1, out.o2 ; Adresele semnalelor de I/O
    
    ; Initializarea adreselor pentru semnalele de I/O
    in.s1 = 1001
    in.s2 = 1002             ; Tabelul cu semnale este afisat in consola,
    in.oprire = 1234         ; apare cand executati comanda 'env ex2005'
    out.banda = 1
    out.o1 = 11
    out.o2 = 12
    
    ; Resetarea semnalelor de iesire
    SIGNAL -out.banda
    SIGNAL -out.o1
    SIGNAL -out.o2
    
    ; Initializare numar de linii/coloane/nivele
    nl = 3
    nc = 2
    nn = 2
    
    ; Viteza generala de lucru
    SPEED 90 ALWAYS
    
    ; Timpul de asteptare pentru actionarea gripper-ului
    PARAMETER HAND.TIME = 0.2
    
    ; Aplicatia incepe cu robotul in #safe cu gripper-ul deschis
    OPEN
    MOVE #safe
    BREAK
    
    ; Initializarea contorilor pentru piesele A si B
    ; Contorii incep de la 0 pentru simplificarea formulelor.
    a = 0
    b = 0
    
    ; Bucla principala
    WHILE NOT SIG(in.oprire) DO               ; Ciclul se repeta atata timp cat semnalul 'in.oprire' este inactiv
        
        ; Pornesc banda
        SIGNAL out.banda
        
        ; Astept fie sa se activeze senzorul S2, fie sa treaca 30 secunde
        TIMER 1 = 0
        WAIT SIG(in.s2) OR TIMER(1) > 30
        
        ; Opresc banda
        SIGNAL -out.banda
        
        ; Tratez cazul in care nu sunt piese pe banda
        IF TIMER(1) > 30 THEN
            TYPE "Pe banda nu sunt piese."
            RETURN
        END
        
        
        IF SIG(in.s1) THEN          ; Piesa de tip A
            ; Piesele A se iau din p1 ...
            SET pick = p1
            
            ; ... si se pun pe paleta in ordinea N-L-C (se putea si N-C-L)
            i = INT(a/nc) MOD nl
            j = a MOD nc
            k = INT(a / (nl*nc))
            
            ; Indicele liniei (i) creste in sensul negativ al axei Y
            ; Indicele coloanei (j) creste in sensul pozitiv al axei X
            ; Indicele nivelului (k) creste in sensul pozitiv al axei Z
            ; Distantele d1, d2 si h sunt date in centimetri; robotul lucreaza in milimetri
            SET place = SHIFT(pal1 BY j*d1*10, -i*d2*10, k*h*10)
            
            ; Apel pick and place
            CALL pick.place(pick, place)
            
            ; Incrementare numar piese A
            a = a + 1
            
            
        ELSE                        ; Piesa de tip B
            
            ; Piesele B se iau din p2 ...
            SET pick = p2
            
            ; ... si se plaseaza incepand cu pal2, pe directia axei X, rotite cu 90 grade
            SET place = SHIFT(pal2 BY b*d*10, 0, 0):RZ(90 * (b MOD 2))
            
            ; Apel pick and place
            CALL pick.place(pick, place)
            
            ; Incrementare numar piese B
            b = b + 1
        END
        
        ; Golire paleta A
        IF a == nl*nn*nc THEN
            SIGNAL out.o1
            WAIT.EVENT, 5
            SIGNAL -out.o1
            a = 0
        END
        
        ; Golire paleta B
        IF b == 5 THEN
            SIGNAL out.o2
            WAIT.EVENT, 5
            SIGNAL -out.o2
            b = 0
        END
    END        ; Sfarsit bucla principala
    
    ; Intoarcere in #safe
    MOVE #safe
    
    ; Gata :)
.END

.PROGRAM pick.place(pick,place)
    AUTO z.pick, z.place
    z.pick = 100
    z.place = 100
    
    OPEN
    APPRO pick, z.pick
    BREAK
    SPEED 50
    MOVES pick
    CLOSEI
    SPEED 50
    DEPARTS 100
    BREAK
    
    APPRO place, z.pick
    BREAK
    SPEED 50
    MOVES place
    OPENI
    SPEED 50
    DEPARTS 100
    BREAK
.END


